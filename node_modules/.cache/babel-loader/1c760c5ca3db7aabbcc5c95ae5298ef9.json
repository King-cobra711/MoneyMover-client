{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Desktop/My Projects/JavaScript/Money-Transfer/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport * as ReactStrap from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Collapse, CardBody, Card } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [balanceA, setBalanceA] = useState(0);\n  const [balanceB, setBalanceB] = useState(0);\n  const [Asend, setASend] = useState(false);\n  const [Bsend, setBsend] = useState(false);\n  const [Ahistory, setAhistory] = useState([]);\n  const [Bhistory, setBHistory] = useState([]);\n  const [addTake, setAddTake] = useState(0);\n  const [showAddTake, setShowAddTake] = useState(false);\n  const [aSendValue, setASendValue] = useState(0);\n  const [bSendValue, setBSendValue] = useState(0);\n  const [refresh, setRefresh] = useState(false);\n  const [Aerror, setAerror] = useState(\"\");\n  const [Berror, setBerror] = useState(\"\");\n  const [isOpenA, setIsOpenA] = useState(false);\n  const [isOpenB, setIsOpenB] = useState(false);\n\n  const toggleA = () => setIsOpenA(!isOpenA);\n\n  const toggleB = () => setIsOpenB(!isOpenB);\n\n  useEffect(() => {\n    setAerror(\"\");\n    setBerror(\"\");\n\n    async function fetchBalances() {\n      const request = await fetch(\"http://localhost:3001/balances\", {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify()\n      }).catch(error => console.log(error)).then(res => {\n        if (res.status === 200) {\n          res.json().then(data => {\n            setBalanceA(data.Abalance);\n            setBalanceB(data.Bbalance);\n          });\n        }\n      });\n      return request;\n    }\n\n    fetchBalances();\n  }, [refresh]);\n\n  const submitA = () => {\n    if (aSendValue === 0 || aSendValue === \"0\") {\n      setAerror(\"Can't send $0\");\n    } else {\n      if (aSendValue < 0) {\n        setAerror(\"must be positive value\");\n      } else {\n        if (balanceA - aSendValue < 0) {\n          setAerror(\"Insufficent funds\");\n        } else {\n          async function sendMoney() {\n            const request = await fetch(\"http://localhost:3001/moneyToB\", {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              credentials: \"include\",\n              body: JSON.stringify({\n                money: aSendValue\n              })\n            }).then(res => {\n              if (res.status === 200) {\n                setRefresh(!refresh);\n                setAddTake(aSendValue);\n                setASend(true);\n                setBsend(false);\n                setAhistory([...Ahistory, -aSendValue]);\n                setBHistory([...Bhistory, +aSendValue]);\n                setShowAddTake(true);\n                setTimeout(() => {\n                  setShowAddTake(false);\n                }, 1000);\n                setASendValue(0);\n                setBSendValue(0);\n                document.getElementById(\"AmountA\").value = \"\";\n                document.getElementById(\"AmountB\").value = \"\";\n              } else if (res.status === 406) {\n                res.json().then(data => {\n                  setAerror(data.error[0].msg);\n                });\n              } else {\n                console.log(\"ERROR\");\n              }\n            });\n            return request;\n          }\n\n          sendMoney();\n        }\n      }\n    }\n  };\n\n  const submitB = () => {\n    if (bSendValue === 0 || bSendValue === \"0\") {\n      setBerror(\"Can't send $0\");\n    } else {\n      if (bSendValue < 0) {\n        setBerror(\"Must be positive value\");\n      } else {\n        if (balanceB - bSendValue < 0) {\n          setBerror(\"Insufficient funds\");\n        } else {\n          async function sendMoney() {\n            const request = await fetch(\"http://localhost:3001/moneyToA\", {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              credentials: \"include\",\n              body: JSON.stringify({\n                money: bSendValue\n              })\n            }).then(res => {\n              if (res.status === 200) {\n                setRefresh(!refresh);\n                setAddTake(bSendValue);\n                setASend(false);\n                setBsend(true);\n                setBHistory([...Bhistory, -bSendValue]);\n                setAhistory([...Ahistory, +bSendValue]);\n                setShowAddTake(true);\n                setTimeout(() => {\n                  setShowAddTake(false);\n                }, 1000);\n                setASendValue(0);\n                setBSendValue(0);\n                document.getElementById(\"AmountA\").value = \"\";\n                document.getElementById(\"AmountB\").value = \"\";\n              } else if (res.status === 406) {\n                res.json().then(data => {\n                  setBerror(data.error[0].msg);\n                });\n              } else {\n                console.log(\"ERROR\");\n              }\n            });\n            return request;\n          }\n\n          sendMoney();\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"title\",\n      children: \"Money Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactStrap.Container, {\n      children: [/*#__PURE__*/_jsxDEV(ReactStrap.Row, {\n        children: [/*#__PURE__*/_jsxDEV(ReactStrap.Col, {\n          id: \"borderR\",\n          className: \"accountName\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Account A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactStrap.Col, {\n          id: \"borderL\",\n          className: \"accountName\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Account B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactStrap.Row, {\n        children: [/*#__PURE__*/_jsxDEV(ReactStrap.Col, {\n          id: \"balance\",\n          className: \"borderR\",\n          children: [\"Balance: $\", balanceA, showAddTake ? /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"aside\",\n            className: Asend ? \"neg\" : \"pos\",\n            children: Asend ? \"- $\" + addTake : \"+ $\" + addTake\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"noVis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactStrap.Col, {\n          style: {\n            position: \"relative\"\n          },\n          id: \"balance\",\n          className: \"borderL\",\n          children: [\"Balance: $\", balanceB, showAddTake ? /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"bside\",\n            className: Bsend ? \"neg\" : \"pos\",\n            children: Bsend ? \"- $\" + addTake : \"+ $\" + addTake\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"noVis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactStrap.Row, {\n        children: [/*#__PURE__*/_jsxDEV(ReactStrap.Col, {\n          className: \"borderR\",\n          children: /*#__PURE__*/_jsxDEV(ReactStrap.Form, {\n            children: /*#__PURE__*/_jsxDEV(ReactStrap.Form.Group, {\n              controlId: \"AmountA\",\n              children: [/*#__PURE__*/_jsxDEV(ReactStrap.Form.Control, {\n                onBlur: () => setBSendValue(0),\n                onChange: event => setASendValue(event.target.value),\n                type: \"number\",\n                placeholder: \"Enter amount...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: Aerror\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ReactStrap.Button, {\n                className: \"mt-10\",\n                onClick: () => submitA(),\n                variant: \"outline-primary\",\n                children: \"Send to B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactStrap.Col, {\n          className: \"borderL\",\n          children: /*#__PURE__*/_jsxDEV(ReactStrap.Form, {\n            children: [/*#__PURE__*/_jsxDEV(ReactStrap.Form.Group, {\n              controlId: \"AmountB\",\n              children: [/*#__PURE__*/_jsxDEV(ReactStrap.Form.Control, {\n                onBlur: () => setASendValue(0),\n                onChange: event => setBSendValue(event.target.value),\n                type: \"number\",\n                placeholder: \"Enter amount...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: Berror\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReactStrap.Button, {\n              className: \"mt-10\",\n              onClick: () => submitB(),\n              variant: \"outline-primary\",\n              children: \"Send to A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactStrap.Row, {\n        children: [/*#__PURE__*/_jsxDEV(ReactStrap.Col, {\n          style: {\n            paddingTop: \"1.6em\"\n          },\n          className: \"borderR\",\n          children: [/*#__PURE__*/_jsxDEV(ReactStrap.Button, {\n            onClick: () => toggleA(),\n            variant: \"light\",\n            children: \"Transaction History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            isOpen: isOpenA,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: Ahistory.length > 0 ? Ahistory.map((val, key) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: val >= 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"historyPos\",\n                      children: [\"+ $\", val]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"historyNeg\",\n                      children: [\"- $\", val * -1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 25\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactStrap.Col, {\n          style: {\n            paddingTop: \"1.6em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ReactStrap.Button, {\n            onClick: () => {\n              toggleB();\n            },\n            variant: \"light\",\n            children: \"Transaction History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            isOpen: isOpenB,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: Bhistory.length > 0 ? Bhistory.map((val, key) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: val >= 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"historyPos\",\n                      children: [\"+ $\", val]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"historyNeg\",\n                      children: [\"- $\", val * -1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 25\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"X2y7qqDOBx5axOHFjeRhvJgzf80=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Matt/Desktop/My Projects/JavaScript/Money-Transfer/client/src/App.js"],"names":["React","useState","useEffect","ReactStrap","Collapse","CardBody","Card","App","balanceA","setBalanceA","balanceB","setBalanceB","Asend","setASend","Bsend","setBsend","Ahistory","setAhistory","Bhistory","setBHistory","addTake","setAddTake","showAddTake","setShowAddTake","aSendValue","setASendValue","bSendValue","setBSendValue","refresh","setRefresh","Aerror","setAerror","Berror","setBerror","isOpenA","setIsOpenA","isOpenB","setIsOpenB","toggleA","toggleB","fetchBalances","request","fetch","method","credentials","headers","body","JSON","stringify","catch","error","console","log","then","res","status","json","data","Abalance","Bbalance","submitA","sendMoney","money","setTimeout","document","getElementById","value","msg","submitB","position","event","target","paddingTop","length","map","val","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport * as ReactStrap from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Collapse, CardBody, Card } from \"reactstrap\";\nfunction App() {\n  const [balanceA, setBalanceA] = useState(0);\n  const [balanceB, setBalanceB] = useState(0);\n  const [Asend, setASend] = useState(false);\n  const [Bsend, setBsend] = useState(false);\n  const [Ahistory, setAhistory] = useState([]);\n  const [Bhistory, setBHistory] = useState([]);\n  const [addTake, setAddTake] = useState(0);\n  const [showAddTake, setShowAddTake] = useState(false);\n  const [aSendValue, setASendValue] = useState(0);\n  const [bSendValue, setBSendValue] = useState(0);\n  const [refresh, setRefresh] = useState(false);\n  const [Aerror, setAerror] = useState(\"\");\n  const [Berror, setBerror] = useState(\"\");\n  const [isOpenA, setIsOpenA] = useState(false);\n  const [isOpenB, setIsOpenB] = useState(false);\n\n  const toggleA = () => setIsOpenA(!isOpenA);\n  const toggleB = () => setIsOpenB(!isOpenB);\n\n  useEffect(() => {\n    setAerror(\"\");\n    setBerror(\"\");\n    async function fetchBalances() {\n      const request = await fetch(\"http://localhost:3001/balances\", {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(),\n      })\n        .catch((error) => console.log(error))\n        .then((res) => {\n          if (res.status === 200) {\n            res.json().then((data) => {\n              setBalanceA(data.Abalance);\n              setBalanceB(data.Bbalance);\n            });\n          }\n        });\n      return request;\n    }\n    fetchBalances();\n  }, [refresh]);\n\n  const submitA = () => {\n    if (aSendValue === 0 || aSendValue === \"0\") {\n      setAerror(\"Can't send $0\");\n    } else {\n      if (aSendValue < 0) {\n        setAerror(\"must be positive value\");\n      } else {\n        if (balanceA - aSendValue < 0) {\n          setAerror(\"Insufficent funds\");\n        } else {\n          async function sendMoney() {\n            const request = await fetch(\"http://localhost:3001/moneyToB\", {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\",\n              },\n              credentials: \"include\",\n              body: JSON.stringify({\n                money: aSendValue,\n              }),\n            }).then((res) => {\n              if (res.status === 200) {\n                setRefresh(!refresh);\n                setAddTake(aSendValue);\n                setASend(true);\n                setBsend(false);\n                setAhistory([...Ahistory, -aSendValue]);\n                setBHistory([...Bhistory, +aSendValue]);\n                setShowAddTake(true);\n                setTimeout(() => {\n                  setShowAddTake(false);\n                }, 1000);\n                setASendValue(0);\n                setBSendValue(0);\n                document.getElementById(\"AmountA\").value = \"\";\n                document.getElementById(\"AmountB\").value = \"\";\n              } else if (res.status === 406) {\n                res.json().then((data) => {\n                  setAerror(data.error[0].msg);\n                });\n              } else {\n                console.log(\"ERROR\");\n              }\n            });\n            return request;\n          }\n          sendMoney();\n        }\n      }\n    }\n  };\n  const submitB = () => {\n    if (bSendValue === 0 || bSendValue === \"0\") {\n      setBerror(\"Can't send $0\");\n    } else {\n      if (bSendValue < 0) {\n        setBerror(\"Must be positive value\");\n      } else {\n        if (balanceB - bSendValue < 0) {\n          setBerror(\"Insufficient funds\");\n        } else {\n          async function sendMoney() {\n            const request = await fetch(\"http://localhost:3001/moneyToA\", {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\",\n              },\n              credentials: \"include\",\n              body: JSON.stringify({\n                money: bSendValue,\n              }),\n            }).then((res) => {\n              if (res.status === 200) {\n                setRefresh(!refresh);\n                setAddTake(bSendValue);\n                setASend(false);\n                setBsend(true);\n                setBHistory([...Bhistory, -bSendValue]);\n                setAhistory([...Ahistory, +bSendValue]);\n                setShowAddTake(true);\n                setTimeout(() => {\n                  setShowAddTake(false);\n                }, 1000);\n                setASendValue(0);\n                setBSendValue(0);\n                document.getElementById(\"AmountA\").value = \"\";\n                document.getElementById(\"AmountB\").value = \"\";\n              } else if (res.status === 406) {\n                res.json().then((data) => {\n                  setBerror(data.error[0].msg);\n                });\n              } else {\n                console.log(\"ERROR\");\n              }\n            });\n            return request;\n          }\n          sendMoney();\n        }\n      }\n    }\n  };\n  return (\n    <div className=\"App\">\n      <h1 id=\"title\">Money Transfer</h1>\n      <ReactStrap.Container>\n        <ReactStrap.Row>\n          <ReactStrap.Col id=\"borderR\" className=\"accountName\">\n            <h3>Account A</h3>\n          </ReactStrap.Col>\n          <ReactStrap.Col id=\"borderL\" className=\"accountName\">\n            <h3>Account B</h3>\n          </ReactStrap.Col>\n        </ReactStrap.Row>\n        <ReactStrap.Row>\n          <ReactStrap.Col id=\"balance\" className=\"borderR\">\n            Balance: ${balanceA}\n            {showAddTake ? (\n              <p id=\"aside\" className={Asend ? \"neg\" : \"pos\"}>\n                {Asend ? \"- $\" + addTake : \"+ $\" + addTake}\n              </p>\n            ) : (\n              <p className=\"noVis\"></p>\n            )}\n          </ReactStrap.Col>\n          <ReactStrap.Col\n            style={{ position: \"relative\" }}\n            id=\"balance\"\n            className=\"borderL\"\n          >\n            Balance: ${balanceB}\n            {showAddTake ? (\n              <p id=\"bside\" className={Bsend ? \"neg\" : \"pos\"}>\n                {Bsend ? \"- $\" + addTake : \"+ $\" + addTake}\n              </p>\n            ) : (\n              <p className=\"noVis\"></p>\n            )}\n          </ReactStrap.Col>\n        </ReactStrap.Row>\n        <ReactStrap.Row>\n          <ReactStrap.Col className=\"borderR\">\n            <ReactStrap.Form>\n              <ReactStrap.Form.Group controlId=\"AmountA\">\n                <ReactStrap.Form.Control\n                  onBlur={() => setBSendValue(0)}\n                  onChange={(event) => setASendValue(event.target.value)}\n                  type=\"number\"\n                  placeholder=\"Enter amount...\"\n                ></ReactStrap.Form.Control>\n                <p className=\"error\">{Aerror}</p>\n                <ReactStrap.Button\n                  className=\"mt-10\"\n                  onClick={() => submitA()}\n                  variant=\"outline-primary\"\n                >\n                  Send to B\n                </ReactStrap.Button>\n              </ReactStrap.Form.Group>\n            </ReactStrap.Form>\n          </ReactStrap.Col>\n          <ReactStrap.Col className=\"borderL\">\n            <ReactStrap.Form>\n              <ReactStrap.Form.Group controlId=\"AmountB\">\n                <ReactStrap.Form.Control\n                  onBlur={() => setASendValue(0)}\n                  onChange={(event) => setBSendValue(event.target.value)}\n                  type=\"number\"\n                  placeholder=\"Enter amount...\"\n                ></ReactStrap.Form.Control>\n                <p className=\"error\">{Berror}</p>\n              </ReactStrap.Form.Group>\n              <ReactStrap.Button\n                className=\"mt-10\"\n                onClick={() => submitB()}\n                variant=\"outline-primary\"\n              >\n                Send to A\n              </ReactStrap.Button>\n            </ReactStrap.Form>\n          </ReactStrap.Col>\n        </ReactStrap.Row>\n        <ReactStrap.Row>\n          <ReactStrap.Col style={{ paddingTop: \"1.6em\" }} className=\"borderR\">\n            <ReactStrap.Button onClick={() => toggleA()} variant=\"light\">\n              Transaction History\n            </ReactStrap.Button>\n            <Collapse isOpen={isOpenA}>\n              <Card>\n                <CardBody>\n                  {Ahistory.length > 0 ? (\n                    Ahistory.map((val, key) => {\n                      return (\n                        <div>\n                          {val >= 0 ? (\n                            <p className=\"historyPos\">+ ${val}</p>\n                          ) : (\n                            <p className=\"historyNeg\">- ${val * -1}</p>\n                          )}\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <p>N/A</p>\n                  )}\n                </CardBody>\n              </Card>\n            </Collapse>\n          </ReactStrap.Col>\n          <ReactStrap.Col style={{ paddingTop: \"1.6em\" }}>\n            <ReactStrap.Button\n              onClick={() => {\n                toggleB();\n              }}\n              variant=\"light\"\n            >\n              Transaction History\n            </ReactStrap.Button>\n            <Collapse isOpen={isOpenB}>\n              <Card>\n                <CardBody>\n                  {Bhistory.length > 0 ? (\n                    Bhistory.map((val, key) => {\n                      return (\n                        <div>\n                          {val >= 0 ? (\n                            <p className=\"historyPos\">+ ${val}</p>\n                          ) : (\n                            <p className=\"historyNeg\">- ${val * -1}</p>\n                          )}\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <p>N/A</p>\n                  )}\n                </CardBody>\n              </Card>\n            </Collapse>\n          </ReactStrap.Col>\n        </ReactStrap.Row>\n      </ReactStrap.Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}