{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","balanceA","setBalanceA","balanceB","setBalanceB","Asend","setASend","Bsend","setBsend","Ahistory","setAhistory","Bhistory","setBHistory","addTake","setAddTake","showAddTake","setShowAddTake","aSendValue","setASendValue","bSendValue","setBSendValue","refresh","setRefresh","Aerror","setAerror","Berror","setBerror","isOpenA","setIsOpenA","isOpenB","setIsOpenB","useEffect","a","fetch","method","credentials","headers","body","JSON","stringify","catch","error","console","log","then","res","status","json","data","Abalance","Bbalance","request","fetchBalances","className","id","style","position","Group","controlId","Control","onBlur","onChange","event","target","value","type","placeholder","onClick","sendMoney","money","setTimeout","document","getElementById","msg","submitA","variant","submitB","paddingTop","Collapse","isOpen","Card","CardBody","length","map","val","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9b965b71.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport * as ReactStrap from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Collapse, CardBody, Card } from \"reactstrap\";\nfunction App() {\n  const [balanceA, setBalanceA] = useState(null);\n  const [balanceB, setBalanceB] = useState(null);\n  const [Asend, setASend] = useState(false);\n  const [Bsend, setBsend] = useState(false);\n  const [Ahistory, setAhistory] = useState([]);\n  const [Bhistory, setBHistory] = useState([]);\n  const [addTake, setAddTake] = useState(0);\n  const [showAddTake, setShowAddTake] = useState(false);\n  const [aSendValue, setASendValue] = useState(0);\n  const [bSendValue, setBSendValue] = useState(0);\n  const [refresh, setRefresh] = useState(false);\n  const [Aerror, setAerror] = useState(\"\");\n  const [Berror, setBerror] = useState(\"\");\n  const [isOpenA, setIsOpenA] = useState(false);\n  const [isOpenB, setIsOpenB] = useState(false);\n\n  const toggleA = () => setIsOpenA(!isOpenA);\n  const toggleB = () => setIsOpenB(!isOpenB);\n\n  useEffect(() => {\n    setAerror(\"\");\n    setBerror(\"\");\n    async function fetchBalances() {\n      const request = await fetch(\"https://money-mover-server.herokuapp.com\", {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(),\n      })\n        .catch((error) => console.log(error))\n        .then((res) => {\n          if (res.status === 200) {\n            res.json().then((data) => {\n              setBalanceA(data.Abalance);\n              setBalanceB(data.Bbalance);\n            });\n          }\n        });\n      return request;\n    }\n    fetchBalances();\n  }, [refresh]);\n\n  const submitA = () => {\n    if (aSendValue === 0 || aSendValue === \"0\") {\n      setAerror(\"Can't send $0\");\n    } else {\n      if (aSendValue < 0) {\n        setAerror(\"must be positive value\");\n      } else {\n        if (balanceA - aSendValue < 0) {\n          setAerror(\"Insufficent funds\");\n        } else {\n          async function sendMoney() {\n            const request = await fetch(\n              \"https://money-mover-server.herokuapp.com/moneyToB\",\n              {\n                method: \"POST\",\n                headers: {\n                  \"Content-type\": \"application/json\",\n                },\n                credentials: \"include\",\n                body: JSON.stringify({\n                  money: aSendValue,\n                }),\n              }\n            ).then((res) => {\n              if (res.status === 200) {\n                setRefresh(!refresh);\n                setAddTake(aSendValue);\n                setASend(true);\n                setBsend(false);\n                setAhistory([...Ahistory, -aSendValue]);\n                setBHistory([...Bhistory, +aSendValue]);\n                setShowAddTake(true);\n                setTimeout(() => {\n                  setShowAddTake(false);\n                }, 1000);\n                setASendValue(0);\n                setBSendValue(0);\n                document.getElementById(\"AmountA\").value = \"\";\n                document.getElementById(\"AmountB\").value = \"\";\n              } else if (res.status === 406) {\n                res.json().then((data) => {\n                  setAerror(data.error[0].msg);\n                });\n              } else {\n                console.log(\"ERROR\");\n              }\n            });\n            return request;\n          }\n          sendMoney();\n        }\n      }\n    }\n  };\n  const submitB = () => {\n    if (bSendValue === 0 || bSendValue === \"0\") {\n      setBerror(\"Can't send $0\");\n    } else {\n      if (bSendValue < 0) {\n        setBerror(\"Must be positive value\");\n      } else {\n        if (balanceB - bSendValue < 0) {\n          setBerror(\"Insufficient funds\");\n        } else {\n          async function sendMoney() {\n            const request = await fetch(\n              \"https://money-mover-server.herokuapp.com/moneyToA\",\n              {\n                method: \"POST\",\n                headers: {\n                  \"Content-type\": \"application/json\",\n                },\n                credentials: \"include\",\n                body: JSON.stringify({\n                  money: bSendValue,\n                }),\n              }\n            ).then((res) => {\n              if (res.status === 200) {\n                setRefresh(!refresh);\n                setAddTake(bSendValue);\n                setASend(false);\n                setBsend(true);\n                setBHistory([...Bhistory, -bSendValue]);\n                setAhistory([...Ahistory, +bSendValue]);\n                setShowAddTake(true);\n                setTimeout(() => {\n                  setShowAddTake(false);\n                }, 1000);\n                setASendValue(0);\n                setBSendValue(0);\n                document.getElementById(\"AmountA\").value = \"\";\n                document.getElementById(\"AmountB\").value = \"\";\n              } else if (res.status === 406) {\n                res.json().then((data) => {\n                  setBerror(data.error[0].msg);\n                });\n              } else {\n                console.log(\"ERROR\");\n              }\n            });\n            return request;\n          }\n          sendMoney();\n        }\n      }\n    }\n  };\n  return (\n    <div className=\"App\">\n      <h1 id=\"title\">Money Transfer</h1>\n      <ReactStrap.Container>\n        <ReactStrap.Row>\n          <ReactStrap.Col id=\"borderR\" className=\"accountName\">\n            <h3>Account A</h3>\n          </ReactStrap.Col>\n          <ReactStrap.Col id=\"borderL\" className=\"accountName\">\n            <h3>Account B</h3>\n          </ReactStrap.Col>\n        </ReactStrap.Row>\n        <ReactStrap.Row>\n          <ReactStrap.Col id=\"balance\" className=\"borderR\">\n            Balance: ${balanceA == null ? \"...\" : balanceA}\n            {showAddTake ? (\n              <p id=\"aside\" className={Asend ? \"neg\" : \"pos\"}>\n                {Asend ? \"- $\" + addTake : \"+ $\" + addTake}\n              </p>\n            ) : (\n              <p className=\"noVis\"></p>\n            )}\n          </ReactStrap.Col>\n          <ReactStrap.Col\n            style={{ position: \"relative\" }}\n            id=\"balance\"\n            className=\"borderL\"\n          >\n            Balance: ${balanceB == null ? \"...\" : balanceB}\n            {showAddTake ? (\n              <p id=\"bside\" className={Bsend ? \"neg\" : \"pos\"}>\n                {Bsend ? \"- $\" + addTake : \"+ $\" + addTake}\n              </p>\n            ) : (\n              <p className=\"noVis\"></p>\n            )}\n          </ReactStrap.Col>\n        </ReactStrap.Row>\n        <ReactStrap.Row>\n          <ReactStrap.Col className=\"borderR\">\n            <ReactStrap.Form>\n              <ReactStrap.Form.Group controlId=\"AmountA\">\n                <ReactStrap.Form.Control\n                  onBlur={() => setBSendValue(0)}\n                  onChange={(event) => setASendValue(event.target.value)}\n                  type=\"number\"\n                  placeholder=\"Enter amount...\"\n                ></ReactStrap.Form.Control>\n                <p className=\"error\">{Aerror}</p>\n                <ReactStrap.Button\n                  className=\"mt-10\"\n                  onClick={() => submitA()}\n                  variant=\"outline-primary\"\n                >\n                  Send to B\n                </ReactStrap.Button>\n              </ReactStrap.Form.Group>\n            </ReactStrap.Form>\n          </ReactStrap.Col>\n          <ReactStrap.Col className=\"borderL\">\n            <ReactStrap.Form>\n              <ReactStrap.Form.Group controlId=\"AmountB\">\n                <ReactStrap.Form.Control\n                  onBlur={() => setASendValue(0)}\n                  onChange={(event) => setBSendValue(event.target.value)}\n                  type=\"number\"\n                  placeholder=\"Enter amount...\"\n                ></ReactStrap.Form.Control>\n                <p className=\"error\">{Berror}</p>\n              </ReactStrap.Form.Group>\n              <ReactStrap.Button\n                className=\"mt-10\"\n                onClick={() => submitB()}\n                variant=\"outline-primary\"\n              >\n                Send to A\n              </ReactStrap.Button>\n            </ReactStrap.Form>\n          </ReactStrap.Col>\n        </ReactStrap.Row>\n        <ReactStrap.Row>\n          <ReactStrap.Col style={{ paddingTop: \"1.6em\" }} className=\"borderR\">\n            <ReactStrap.Button onClick={() => toggleA()} variant=\"light\">\n              Transaction History\n            </ReactStrap.Button>\n            <Collapse isOpen={isOpenA}>\n              <Card>\n                <CardBody>\n                  {Ahistory.length > 0 ? (\n                    Ahistory.map((val, key) => {\n                      return (\n                        <div>\n                          {val >= 0 ? (\n                            <p className=\"historyPos\">+ ${val}</p>\n                          ) : (\n                            <p className=\"historyNeg\">- ${val * -1}</p>\n                          )}\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <p>N/A</p>\n                  )}\n                </CardBody>\n              </Card>\n            </Collapse>\n          </ReactStrap.Col>\n          <ReactStrap.Col style={{ paddingTop: \"1.6em\" }}>\n            <ReactStrap.Button\n              onClick={() => {\n                toggleB();\n              }}\n              variant=\"light\"\n            >\n              Transaction History\n            </ReactStrap.Button>\n            <Collapse isOpen={isOpenB}>\n              <Card>\n                <CardBody>\n                  {Bhistory.length > 0 ? (\n                    Bhistory.map((val, key) => {\n                      return (\n                        <div>\n                          {val >= 0 ? (\n                            <p className=\"historyPos\">+ ${val}</p>\n                          ) : (\n                            <p className=\"historyNeg\">- ${val * -1}</p>\n                          )}\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <p>N/A</p>\n                  )}\n                </CardBody>\n              </Card>\n            </Collapse>\n          </ReactStrap.Col>\n        </ReactStrap.Row>\n      </ReactStrap.Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}